name: Publish Package to npm

on:
  release:
    types: [created]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Update version in package.json
        run: npm version ${{ steps.get_version.outputs.VERSION }} --no-git-tag-version

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Build
        run: npm run build:clean

      - name: Generate release notes
        run: |
          if [ -f "CHANGELOG.md" ]; then
            version="${{ steps.get_version.outputs.VERSION }}"
            # Extract entry for this version from CHANGELOG.md and save to release-notes.md
            sed -n "/## \[${version}\]/,/## \[/p" CHANGELOG.md | sed '$d' > release-notes.md
          else
            echo "No CHANGELOG.md found, using RELEASE_NOTES.md if available"
            if [ -f "RELEASE_NOTES.md" ]; then
              cp RELEASE_NOTES.md release-notes.md
            else
              echo "# Release v${{ steps.get_version.outputs.VERSION }}" > release-notes.md
              echo "Initial release" >> release-notes.md
            fi
          fi

      - name: Update GitHub Release description
        uses: softprops/action-gh-release@v1
        with:
          body_path: release-notes.md
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
